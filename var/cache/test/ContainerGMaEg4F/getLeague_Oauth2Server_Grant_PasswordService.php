<?php

namespace ContainerGMaEg4F;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLeague_Oauth2Server_Grant_PasswordService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'league.oauth2_server.grant.password' shared service.
     *
     * @return \League\OAuth2\Server\Grant\PasswordGrant
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/league/event/src/EmitterAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Grant/GrantTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/event/src/EmitterAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/CryptTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Grant/AbstractGrant.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Grant/PasswordGrant.php';

        $container->privates['league.oauth2_server.grant.password'] = $instance = new \League\OAuth2\Server\Grant\PasswordGrant(($container->privates['league.oauth2_server.repository.user'] ?? $container->load('getLeague_Oauth2Server_Repository_UserService')), ($container->privates['league.oauth2_server.repository.refresh_token'] ?? $container->load('getLeague_Oauth2Server_Repository_RefreshTokenService')));

        $instance->setRefreshTokenTTL(new \DateInterval('P1M'));

        return $instance;
    }
}
