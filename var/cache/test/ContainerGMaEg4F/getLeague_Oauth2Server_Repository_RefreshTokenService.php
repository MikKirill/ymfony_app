<?php

namespace ContainerGMaEg4F;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLeague_Oauth2Server_Repository_RefreshTokenService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'league.oauth2_server.repository.refresh_token' shared service.
     *
     * @return \League\Bundle\OAuth2ServerBundle\Repository\RefreshTokenRepository
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/RepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/RefreshTokenRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Repository/RefreshTokenRepository.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Manager/RefreshTokenManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Manager/InMemory/RefreshTokenManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Manager/AccessTokenManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Manager/InMemory/AccessTokenManager.php';

        return $container->privates['league.oauth2_server.repository.refresh_token'] = new \League\Bundle\OAuth2ServerBundle\Repository\RefreshTokenRepository(($container->privates['league.oauth2_server.manager.in_memory.refresh_token'] ??= new \League\Bundle\OAuth2ServerBundle\Manager\InMemory\RefreshTokenManager(NULL)), ($container->privates['league.oauth2_server.manager.in_memory.access_token'] ??= new \League\Bundle\OAuth2ServerBundle\Manager\InMemory\AccessTokenManager(true)));
    }
}
