<?php

namespace ContainerGMaEg4F;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLeague_Oauth2Server_Repository_ScopeService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'league.oauth2_server.repository.scope' shared service.
     *
     * @return \League\Bundle\OAuth2ServerBundle\Repository\ScopeRepository
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/RepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/ScopeRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Repository/ScopeRepository.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Converter/ScopeConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Converter/ScopeConverter.php';

        return $container->privates['league.oauth2_server.repository.scope'] = new \League\Bundle\OAuth2ServerBundle\Repository\ScopeRepository(($container->privates['league.oauth2_server.manager.in_memory.scope'] ?? $container->load('getLeague_Oauth2Server_Manager_InMemory_ScopeService')), ($container->privates['league.oauth2_server.manager.in_memory.client'] ?? $container->load('getLeague_Oauth2Server_Manager_InMemory_ClientService')), ($container->privates['league.oauth2_server.converter.scope'] ??= new \League\Bundle\OAuth2ServerBundle\Converter\ScopeConverter()), ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService()));
    }
}
